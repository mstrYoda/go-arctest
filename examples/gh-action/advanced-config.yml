# Advanced configuration example with interface and parameter rules
layers:
  - name: Domain
    pattern: "^domain/.*$"
  - name: Application
    pattern: "^application/.*$"
  - name: Infrastructure
    pattern: "^infrastructure/.*$"
  - name: Presentation
    pattern: "^presentation/.*$"

# Basic layer dependency rules
rules:
  - from: Application
    to: Domain
  - from: Infrastructure
    to: Domain
  - from: Infrastructure
    to: Application
  - from: Presentation
    to: Domain
  - from: Presentation
    to: Application
  - from: Presentation
    to: Infrastructure

# Interface implementation rules
interfaceRules:
  - structPattern: ".*Repository$"
    interfacePattern: ".*RepositoryInterface$"
  - structPattern: ".*Service$"
    interfacePattern: ".*ServiceInterface$"

# Parameter type rules
parameterRules:
  - structPattern: ".*Service$"
    methodPattern: "New.*"
    parameterTypePattern: ".*Repository$"
    shouldUseInterface: true
  - structPattern: ".*Handler$"
    methodPattern: "New.*"
    parameterTypePattern: ".*Service$"
    shouldUseInterface: true

# Direct layer dependency rules
directLayerDependencyRules:
  - sourceLayer: "Domain"
    targetLayer: "Application"
    allowed: false
  - sourceLayer: "Domain"
    targetLayer: "Infrastructure"
    allowed: false
  - sourceLayer: "Domain"
    targetLayer: "Presentation"
    allowed: false
